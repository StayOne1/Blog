{
    "version": "https://jsonfeed.org/version/1",
    "title": "Youyi's Blog • All posts by \"java\" category",
    "description": "尤一的计算机学习之路",
    "home_page_url": "https://stayone1.github.io",
    "items": [
        {
            "id": "https://stayone1.github.io/2022/08/31/JAVA%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/",
            "url": "https://stayone1.github.io/2022/08/31/JAVA%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/",
            "title": "JAVA设计模式之装饰模式",
            "date_published": "2022-08-31T15:10:00.000Z",
            "content_html": "<h1 id=\"装饰模式\"><a href=\"#装饰模式\" class=\"headerlink\" title=\"装饰模式\"></a>装饰模式</h1><p>装饰器模式是为了在不改变原有类的结构的前提下，给一个现有的对象拓展新的功能。这种类型的设计模式属于结构性模式，它作为现有类的一个包装。</p>\n<p>这种模式为拓展类提供了新的解决方案，可以不使用继承的方式实现。</p>\n<hr>\n<p>优点：</p>\n<ul>\n<li>可以代替继承，减少子类的数量</li>\n<li>动态增加功能，动态撤销</li>\n</ul>\n",
            "tags": []
        }
    ]
}