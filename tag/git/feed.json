{
    "version": "https://jsonfeed.org/version/1",
    "title": "Youyi's Blog • All posts by \"git\" tag",
    "description": "尤一的计算机学习之路",
    "home_page_url": "https://stayone1.github.io",
    "items": [
        {
            "id": "https://stayone1.github.io/2022/09/03/Git%E5%9F%BA%E7%A1%80/",
            "url": "https://stayone1.github.io/2022/09/03/Git%E5%9F%BA%E7%A1%80/",
            "title": "Git基础",
            "date_published": "2022-09-03T01:40:00.000Z",
            "content_html": "<h1 id=\"Git学习\"><a href=\"#Git学习\" class=\"headerlink\" title=\"Git学习\"></a>Git学习</h1><p>Git 是一个分布式版本控制系统，可以便捷高效地处理任何项目。Git的内容存储使用的是SHA-1哈希算法。</p>\n<h2 id=\"Git-工作流程\"><a href=\"#Git-工作流程\" class=\"headerlink\" title=\"Git 工作流程\"></a>Git 工作流程</h2><ul>\n<li>克隆 Git 资源作为工作目录。</li>\n<li>在克隆的资源上添加或修改文件。</li>\n<li>如果其他人修改了，你可以更新资源。</li>\n<li>在提交前查看修改。</li>\n<li>提交修改。</li>\n<li>在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。</li>\n</ul>\n<img src = \"git工作流程.png\">\n\n<h2 id=\"Git工作区、暂存区、版本库\"><a href=\"#Git工作区、暂存区、版本库\" class=\"headerlink\" title=\"Git工作区、暂存区、版本库\"></a>Git工作区、暂存区、版本库</h2><ul>\n<li><strong>工作区：</strong> 就是你在电脑里能看到的目录</li>\n<li><strong>暂存区：</strong> (index) 一般存放在.git目录下的index文件中，也叫做索引</li>\n<li><strong>版本库：</strong> 工作区一个隐藏目录.git</li>\n</ul>\n<img src = \"git三区.jpg\">\n\n<hr>\n<h2 id=\"创建版本库\"><a href=\"#创建版本库\" class=\"headerlink\" title=\"创建版本库\"></a>创建版本库</h2><ul>\n<li><p>创建文件夹</p>\n<p> <code>mkdir 文件夹名</code> </p>\n</li>\n<li><p>切换到某目录下</p>\n<p> <code>cd 文件夹名</code> </p>\n</li>\n<li><p>查看当前目录</p>\n<p> <code>pwd</code></p>\n</li>\n<li><p>把当前目录初始化到仓库</p>\n<p> <code>git init</code> </p>\n</li>\n<li><p>添加文件到仓库 可以添加多个文件</p>\n<p> <code>git add 文件名</code></p>\n</li>\n<li><p>提交到仓库</p>\n<p> <code>git commit -m &quot;解释&quot;</code></p>\n</li>\n</ul>\n<h2 id=\"时光机\"><a href=\"#时光机\" class=\"headerlink\" title=\"时光机\"></a>时光机</h2><ul>\n<li>当前仓库状态(本地)<br> <code>git status</code> </li>\n<li>查看文件上次修改记录<br> <code>git diff 文件名</code></li>\n</ul>\n<h3 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h3><ul>\n<li>显示最近到最远的提交日志<br> <code>git log</code> </li>\n<li>简易显示<br> <code>git log --pretty=oneline</code></li>\n</ul>\n<blockquote>\n<p>HEAD表示当前版本，HEAD^表示上一版本</p>\n<p>HEAD^^表示上上版本，HEAD~100表示上100个版本</p>\n</blockquote>\n<ul>\n<li><p>HEAD也可以换成是对应版本的前部分版本号</p>\n<p> <code>git reset --hard HEAD^</code> </p>\n</li>\n<li><p>记录了每一次命令</p>\n<p> <code>git reflog</code></p>\n</li>\n</ul>\n<hr>\n<h2 id=\"连接远程仓库\"><a href=\"#连接远程仓库\" class=\"headerlink\" title=\"连接远程仓库\"></a>连接远程仓库</h2><ol>\n<li><p>生成ssh密钥</p>\n<pre><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot; \n</code></pre>\n<p> 生成的密钥默认位于C:\\Users\\用户名.ssh文件夹中 默认文件名为id_rsa</p>\n</li>\n<li><p>建立与github的连接</p>\n<p>进入用户settings ，选择ssh and GPG keys,创建一个ssh密钥，把公钥(.pub)粘贴进去</p>\n</li>\n<li><p>连接远程仓库</p>\n<p>在github中创建项目仓库，并复制仓库ssh链接  通常为<code>git@github.com:xxx/xxx.git</code></p>\n<p>在本地仓库进入git bash ，运行命令<code>git remote add origin git@github.com:xxx/xxx.git</code></p>\n</li>\n<li><p>pull操作</p>\n<p><code>git pull --rebase origin 分支名</code></p>\n</li>\n<li><p>push操作</p>\n<p><code>git push -u origin 分支名</code></p>\n</li>\n</ol>\n",
            "tags": [
                "Git"
            ]
        }
    ]
}